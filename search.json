[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Syllabus",
    "section": "",
    "text": "This is the syllabus for the training program. We will work in agile mode and adjust continuously the pace and content of the training sessions based on your feedback and needs.\nThe present document will be continuously updated and used as the main entry point to share information and references throughout the program."
  },
  {
    "objectID": "index.html#poking-around-rstudio-and-loading-data",
    "href": "index.html#poking-around-rstudio-and-loading-data",
    "title": "Syllabus",
    "section": "Poking around Rstudio and loading data",
    "text": "Poking around Rstudio and loading data"
  },
  {
    "objectID": "index.html#common-data-structures-basic-of-r-and-dplyr-syntax",
    "href": "index.html#common-data-structures-basic-of-r-and-dplyr-syntax",
    "title": "Syllabus",
    "section": "Common data structures, basic of R and dplyr syntax",
    "text": "Common data structures, basic of R and dplyr syntax\n\nObjective: learn principles underlying the grammar of data manipulation dplyr\nExternal resources\n\ndplyr overview\nIntro to dplyr"
  },
  {
    "objectID": "index.html#data-manipulation-and-transformation",
    "href": "index.html#data-manipulation-and-transformation",
    "title": "Syllabus",
    "section": "Data manipulation and transformation",
    "text": "Data manipulation and transformation"
  },
  {
    "objectID": "index.html#professional-quality-graphics",
    "href": "index.html#professional-quality-graphics",
    "title": "Syllabus",
    "section": "Professional quality graphics",
    "text": "Professional quality graphics"
  },
  {
    "objectID": "index.html#reporting-with-quarto",
    "href": "index.html#reporting-with-quarto",
    "title": "Syllabus",
    "section": "Reporting with Quarto",
    "text": "Reporting with Quarto"
  },
  {
    "objectID": "index.html#descrptive-statistics-and-data-exploration",
    "href": "index.html#descrptive-statistics-and-data-exploration",
    "title": "Syllabus",
    "section": "Descrptive statistics and data exploration",
    "text": "Descrptive statistics and data exploration"
  },
  {
    "objectID": "index.html#from-description-to-prediction-fitting-statistical-models",
    "href": "index.html#from-description-to-prediction-fitting-statistical-models",
    "title": "Syllabus",
    "section": "From description to prediction: fitting statistical models",
    "text": "From description to prediction: fitting statistical models"
  },
  {
    "objectID": "index.html#leveraging-ai",
    "href": "index.html#leveraging-ai",
    "title": "Syllabus",
    "section": "Leveraging AI",
    "text": "Leveraging AI"
  },
  {
    "objectID": "index.html#packaging",
    "href": "index.html#packaging",
    "title": "Syllabus",
    "section": "Packaging",
    "text": "Packaging"
  },
  {
    "objectID": "index.html#collaborating-with-git",
    "href": "index.html#collaborating-with-git",
    "title": "Syllabus",
    "section": "Collaborating with git",
    "text": "Collaborating with git"
  },
  {
    "objectID": "index.html#references",
    "href": "index.html#references",
    "title": "Syllabus",
    "section": "References",
    "text": "References\n\nR for Data Science, 2nd edition, H. Wickham 2023"
  },
  {
    "objectID": "Training_Session_2/Notes_session2.html",
    "href": "Training_Session_2/Notes_session2.html",
    "title": "Lecture notes",
    "section": "",
    "text": "After a dataset is loaded, we commonly have to go through steps such as checking, cleaning, pruning, reshaping, reformatting etc… The R package dplyr contains functions and a common set of rules (syntax/grammar) to do that. This package needs to be installed as:\n\ninstall.packages(\"dplyr\")\ninstall.packages(\"tidyr\")\n\nand loaded\n\nlibrary(dplyr)\nlibrary(tidyr)\n\nIn this session, we are going to work with toy dataset included in R, the mtcars dataset"
  },
  {
    "objectID": "Training_Session_2/Notes_session2.html#filtering",
    "href": "Training_Session_2/Notes_session2.html#filtering",
    "title": "Lecture notes",
    "section": "2.1 Filtering",
    "text": "2.1 Filtering\nWe can retain rows of a dataset matching a condition with filter()\n\n#  creating a subset of the data with only cars having 4  gears\ndat0 = mtcars_data %&gt;% filter(gear == 4) \n\ndat0\n\n# A tibble: 12 × 12\n   make          mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb\n   &lt;chr&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Mazda RX4    21       6 160     110  3.9   2.62  16.5     0     1     4     4\n 2 Mazda RX4 …  21       6 160     110  3.9   2.88  17.0     0     1     4     4\n 3 Datsun 710   22.8     4 108      93  3.85  2.32  18.6     1     1     4     1\n 4 Merc 240D    24.4     4 147.     62  3.69  3.19  20       1     0     4     2\n 5 Merc 230     22.8     4 141.     95  3.92  3.15  22.9     1     0     4     2\n 6 Merc 280     19.2     6 168.    123  3.92  3.44  18.3     1     0     4     4\n 7 Merc 280C    17.8     6 168.    123  3.92  3.44  18.9     1     0     4     4\n 8 Fiat 128     32.4     4  78.7    66  4.08  2.2   19.5     1     1     4     1\n 9 Honda Civic  30.4     4  75.7    52  4.93  1.62  18.5     1     1     4     2\n10 Toyota Cor…  33.9     4  71.1    65  4.22  1.84  19.9     1     1     4     1\n11 Fiat X1-9    27.3     4  79      66  4.08  1.94  18.9     1     1     4     1\n12 Volvo 142E   21.4     4 121     109  4.11  2.78  18.6     1     1     4     2"
  },
  {
    "objectID": "Training_Session_2/Notes_session2.html#re-arranging-rows-with-arrange",
    "href": "Training_Session_2/Notes_session2.html#re-arranging-rows-with-arrange",
    "title": "Lecture notes",
    "section": "2.2 Re-arranging rows with arrange()",
    "text": "2.2 Re-arranging rows with arrange()\nWe can arrange rows of a data set with arrange(), for example by car make or mpg of gears:\n\n# creating a dataset with same variables but rows sorted by mpg\ndat1 = mtcars_data %&gt;% arrange(mpg)\ndat1\n\n# A tibble: 32 × 12\n   make          mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb\n   &lt;chr&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Cadillac F…  10.4     8  472    205  2.93  5.25  18.0     0     0     3     4\n 2 Lincoln Co…  10.4     8  460    215  3     5.42  17.8     0     0     3     4\n 3 Camaro Z28   13.3     8  350    245  3.73  3.84  15.4     0     0     3     4\n 4 Duster 360   14.3     8  360    245  3.21  3.57  15.8     0     0     3     4\n 5 Chrysler I…  14.7     8  440    230  3.23  5.34  17.4     0     0     3     4\n 6 Maserati B…  15       8  301    335  3.54  3.57  14.6     0     1     5     8\n 7 Merc 450SLC  15.2     8  276.   180  3.07  3.78  18       0     0     3     3\n 8 AMC Javelin  15.2     8  304    150  3.15  3.44  17.3     0     0     3     2\n 9 Dodge Chal…  15.5     8  318    150  2.76  3.52  16.9     0     0     3     2\n10 Ford Pante…  15.8     8  351    264  4.22  3.17  14.5     0     1     5     4\n# ℹ 22 more rows"
  },
  {
    "objectID": "Training_Session_2/Notes_session2.html#selecting-columns",
    "href": "Training_Session_2/Notes_session2.html#selecting-columns",
    "title": "Lecture notes",
    "section": "2.3 Selecting columns",
    "text": "2.3 Selecting columns\nWe can select a subset of columns with select()\n\n# creaintg a subset of the data containing only variables mpg and cyl\ndat2 = mtcars_data %&gt;% select(mpg,cyl)\ndat2\n\n# A tibble: 32 × 2\n     mpg   cyl\n   &lt;dbl&gt; &lt;dbl&gt;\n 1  21       6\n 2  21       6\n 3  22.8     4\n 4  21.4     6\n 5  18.7     8\n 6  18.1     6\n 7  14.3     8\n 8  24.4     4\n 9  22.8     4\n10  19.2     6\n# ℹ 22 more rows"
  },
  {
    "objectID": "Training_Session_2/Notes_session2.html#creating-a-new-variable-with-mutate",
    "href": "Training_Session_2/Notes_session2.html#creating-a-new-variable-with-mutate",
    "title": "Lecture notes",
    "section": "2.4 Creating a new variable with mutate()",
    "text": "2.4 Creating a new variable with mutate()\nWe can create a new variable, for example the power to weight ratio, defined as hp/wt with mutate() as:\n\n# creating a new dataset with new variable  ratio, defined as hp/wt\ndat3 = mtcars_data %&gt;% mutate(ratio = hp/wt)\ndat3\n\n# A tibble: 32 × 13\n   make    mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb ratio\n   &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Mazd…  21       6  160    110  3.9   2.62  16.5     0     1     4     4  42.0\n 2 Mazd…  21       6  160    110  3.9   2.88  17.0     0     1     4     4  38.3\n 3 Dats…  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1  40.1\n 4 Horn…  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1  34.2\n 5 Horn…  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2  50.9\n 6 Vali…  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1  30.3\n 7 Dust…  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4  68.6\n 8 Merc…  24.4     4  147.    62  3.69  3.19  20       1     0     4     2  19.4\n 9 Merc…  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2  30.2\n10 Merc…  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4  35.8\n# ℹ 22 more rows"
  },
  {
    "objectID": "Training_Session_2/Notes_session2.html#combining-several-operations-with-multiple-pipes",
    "href": "Training_Session_2/Notes_session2.html#combining-several-operations-with-multiple-pipes",
    "title": "Lecture notes",
    "section": "2.5 Combining several operations with multiple pipes",
    "text": "2.5 Combining several operations with multiple pipes\nMultiple data wrangling operations can be combined into a single, longer R expression as\n\ndat5 =  mtcars_data %&gt;% \n  filter(gear == 4) %&gt;%  # only 4-gear cars\n  arrange(mpg) %&gt;%  # arranging by mpg\n  mutate(ratio = hp/wt) # new variable\ndat5\n\n# A tibble: 12 × 13\n   make    mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb ratio\n   &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Merc…  17.8     6 168.    123  3.92  3.44  18.9     1     0     4     4  35.8\n 2 Merc…  19.2     6 168.    123  3.92  3.44  18.3     1     0     4     4  35.8\n 3 Mazd…  21       6 160     110  3.9   2.62  16.5     0     1     4     4  42.0\n 4 Mazd…  21       6 160     110  3.9   2.88  17.0     0     1     4     4  38.3\n 5 Volv…  21.4     4 121     109  4.11  2.78  18.6     1     1     4     2  39.2\n 6 Dats…  22.8     4 108      93  3.85  2.32  18.6     1     1     4     1  40.1\n 7 Merc…  22.8     4 141.     95  3.92  3.15  22.9     1     0     4     2  30.2\n 8 Merc…  24.4     4 147.     62  3.69  3.19  20       1     0     4     2  19.4\n 9 Fiat…  27.3     4  79      66  4.08  1.94  18.9     1     1     4     1  34.1\n10 Hond…  30.4     4  75.7    52  4.93  1.62  18.5     1     1     4     2  32.2\n11 Fiat…  32.4     4  78.7    66  4.08  2.2   19.5     1     1     4     1  30  \n12 Toyo…  33.9     4  71.1    65  4.22  1.84  19.9     1     1     4     1  35.4"
  },
  {
    "objectID": "Training_Session_2/Notes_session2.html#basic-ggplot-syntax",
    "href": "Training_Session_2/Notes_session2.html#basic-ggplot-syntax",
    "title": "Lecture notes",
    "section": "3.1 Basic ggplot syntax",
    "text": "3.1 Basic ggplot syntax\nA scatter plot of mpg against hp:\n\nlibrary(ggplot2)\n\nmtcars_data %&gt;%  # what data?\n  ggplot( aes(x = hp, y = mpg) ) + # what variables on the axes?\n  geom_point() # what type of representation?"
  },
  {
    "objectID": "Training_Session_2/Notes_session2.html#larger-dots-with-colours",
    "href": "Training_Session_2/Notes_session2.html#larger-dots-with-colours",
    "title": "Lecture notes",
    "section": "3.2 Larger dots, with colours",
    "text": "3.2 Larger dots, with colours\nA slightly nicer plot with wt as colour shades (colour = wt) and larger dots (cex=2)\n\nmtcars_data %&gt;% \n  ggplot( aes(x = hp, y = mpg, colour = wt, size=2) ) +\n  geom_point() + \n  scale_size(guide = \"none\")"
  },
  {
    "objectID": "Training_Session_2/Notes_session2.html#adding-a-title-and-axes-labels",
    "href": "Training_Session_2/Notes_session2.html#adding-a-title-and-axes-labels",
    "title": "Lecture notes",
    "section": "3.3 Adding a title and axes labels",
    "text": "3.3 Adding a title and axes labels\n\nmtcars_data %&gt;% \n  ggplot( aes(x = hp, y = mpg, colour = wt, size=2) ) +\n  geom_point() +\n  scale_size(guide = \"none\") + \n  labs(title = \"MPG vs Horsepower\",\n       x = \"Horsepower (hp)\",\n       y = \"Miles per Gallon (mpg)\")"
  },
  {
    "objectID": "Training_Session_1/Notes_session1.html",
    "href": "Training_Session_1/Notes_session1.html",
    "title": "Lecture notes",
    "section": "",
    "text": "Teams -&gt; Data Science -&gt;  Data Science Training 2025\nPM to @g.guillot via teams or email"
  },
  {
    "objectID": "Training_Session_1/Notes_session1.html#the-various-panes",
    "href": "Training_Session_1/Notes_session1.html#the-various-panes",
    "title": "Lecture notes",
    "section": "2.1 The various panes",
    "text": "2.1 The various panes\n-   `Source`\n\n-   `Console`\n\n-   `Environment` etc...\n\n-   `Files`, `plots` etc..."
  },
  {
    "objectID": "Training_Session_1/Notes_session1.html#clicking-vs-scripting",
    "href": "Training_Session_1/Notes_session1.html#clicking-vs-scripting",
    "title": "Lecture notes",
    "section": "2.2 Clicking vs Scripting",
    "text": "2.2 Clicking vs Scripting\n\nClicking is user-friendly but error prone, not scalable, not traceable, not reproducible\nScripting is reliable (less error prone), scalable, traceable, reproducible"
  },
  {
    "objectID": "Training_Session_1/Notes_session1.html#rstudio-as-a-pocket-calculator",
    "href": "Training_Session_1/Notes_session1.html#rstudio-as-a-pocket-calculator",
    "title": "Lecture notes",
    "section": "2.3 Rstudio as a pocket calculator",
    "text": "2.3 Rstudio as a pocket calculator\n\n    2+2\n\n[1] 4\n\n    x=3\n    x\n\n[1] 3\n\n    y=4\n    y\n\n[1] 4\n\n    x+y\n\n[1] 7\n\n    x=1:10\n    x\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\n    y=10:1\n    y\n\n [1] 10  9  8  7  6  5  4  3  2  1\n\n    x+y\n\n [1] 11 11 11 11 11 11 11 11 11 11\n\n    # checking my R objects\n    ls()  # even more information found in the 'Environment' pane\n\n[1] \"x\" \"y\"\n\n\n\nSetting the working directory\n\nMethod 1 (GUI): Session -&gt; Set Working Directory\nMethod 2 (command line)\n\n\n\n# line below to be updated\nsetwd(\"C:/Users/g.guillot/OneDrive - World Organisation For Animal Health/Data Science - Documents/Data Science Training 2025/Training_Session_1\")\n\nNB: any character found after a # is treated as a comment (disregarded by R). It is strongly recommended to add brief informative comments to your code to help your next-door colleague or you future self ."
  },
  {
    "objectID": "Training_Session_1/Notes_session1.html#a-tiny-dataset-in-txt-format",
    "href": "Training_Session_1/Notes_session1.html#a-tiny-dataset-in-txt-format",
    "title": "Lecture notes",
    "section": "3.1 A tiny dataset in txt format",
    "text": "3.1 A tiny dataset in txt format\n\nTry to load the books.csv data using the GUI\nDo the same using R commands as below:\n\n\n# installing  a special library to read external data\n# install.packages('readr') # has to be done only once\n\n# loading the package\nlibrary(readr) # has to be done at start of each R session\nbook_data &lt;- read_csv(\"data/books.csv\")"
  },
  {
    "objectID": "Training_Session_1/Notes_session1.html#where-are-my-data",
    "href": "Training_Session_1/Notes_session1.html#where-are-my-data",
    "title": "Lecture notes",
    "section": "3.2 Where are my data?",
    "text": "3.2 Where are my data?\nYou can inspect the content of the dataset you just created by\n\nClicking on the object name in the `Environment` pane\nR commands:\n\n\nlibrary(magrittr) # load a library for modern R syntax writing \n\nbook_data # print the dataset in the console\n\nbook_data |&gt; str() # print info on  structure (more efficient in case of large dataset)"
  },
  {
    "objectID": "Training_Session_1/Notes_session1.html#miscellaneous-remarks",
    "href": "Training_Session_1/Notes_session1.html#miscellaneous-remarks",
    "title": "Lecture notes",
    "section": "3.3 Miscellaneous remarks",
    "text": "3.3 Miscellaneous remarks\n\n3.3.1 Piping\n\nIn older R code book_data |&gt; str() used to be written str(book_data). More generally data |&gt; function() used to be written as function(data). The latter is still widely found.\nThe three characters |&gt; (pronounced ‘pipe’) can be obtained with the keyboard shortcut Ctrl + Shift + M\nIn this training, we will strive to use the modern syntax data %&gt;% function() or more generally data %&gt;% function(opt_arg = my_option)\n\n\n\n3.3.2 Code formatting\n\nNaming conventions:\n\nObject names should start with a letter (numbers and most special characters are forbidden)\nCompound names are welcome\n\nsnake style (preferred): my_data\ncamel style: MyData\n\nExecuting lines, blocks,full scripts\n\nNo rule on code formatting (space, indentation, line end)"
  },
  {
    "objectID": "Training_Session_1/Notes_session1.html#a-larger-dataset-in-excel-format",
    "href": "Training_Session_1/Notes_session1.html#a-larger-dataset-in-excel-format",
    "title": "Lecture notes",
    "section": "3.4 A larger dataset, in excel format",
    "text": "3.4 A larger dataset, in excel format\nTry now to load the PRRS.xlsx dataset.\n\nlibrary(tidyverse) # loading several useful packages\nlibrary(readxl) # to load excel data into R\n\nPRRS = read_excel(\"./data/PRRS.xlsx\")\n\n\nProprietary formats like .xlsx not preferred in Open Source world. Excel de facto standard in corporate world and well supported by Rstudio. Many other formats supported, e.g. .csv, .tsv, .rds, .rda, .json etc.\nWhere are my data ?!?\n\nIn Excel: a lot of screen space for data values, not much for scripting\nIn Rstudio:\n\nRecognition that editing a data file is error prone, not scalable, not traceable, not reproducible\nFocus on scripting, not on data values\nType `ls()` in the console to get a list of your data\n\n\nThe environment pane"
  },
  {
    "objectID": "Training_Session_1/Notes_session1.html#exploring-the-structure-of-the-prrs-dataset",
    "href": "Training_Session_1/Notes_session1.html#exploring-the-structure-of-the-prrs-dataset",
    "title": "Lecture notes",
    "section": "3.5 Exploring the structure of the PRRS dataset",
    "text": "3.5 Exploring the structure of the PRRS dataset\n\nMethod 1 GUI: inspect information in the Environment pane (limited)\nMethod 2: asking questions about the dataset via a script\n\n\n# How many rows and columns?\nPRRS %&gt;% dim()\n# number of columns\nPRRS %&gt;% ncol()\n# number of rows (note the naming consistency!)\nPRRS %&gt;% nrow()\n# variable names\nPRRS %&gt;% colnames()\n# name and class (character, numeric) of variables?\nPRRS %&gt;% str()\n# quick statistical summary of all variables\nPRRS %&gt;% summary()"
  },
  {
    "objectID": "Training_Session_1/Notes_session1.html#rectangular-tables",
    "href": "Training_Session_1/Notes_session1.html#rectangular-tables",
    "title": "Lecture notes",
    "section": "4.1 Rectangular tables",
    "text": "4.1 Rectangular tables\n\nIn Excel, data are organised in sheets and there is also almost no constraint on what a sheet can contain and how material is organised in a sheet\nIn R, there are constraints\nA rectangular table in R is most commonly stored as a data.frame (old style) or a tibble (preferred)\n\ncan mix numeric and character variables (columns)"
  },
  {
    "objectID": "Training_Session_1/Notes_session1.html#handling-loosely-structured-data",
    "href": "Training_Session_1/Notes_session1.html#handling-loosely-structured-data",
    "title": "Lecture notes",
    "section": "4.2 Handling loosely structured data",
    "text": "4.2 Handling loosely structured data\nWhen a dataset can not fit in a rectangular table, a good option is often to store it as a list (or list of lists).\nLet’s consider the simple dataset below. This could be stored as rectangular table with 4 rows and 3 columns.\n\n# NB: this mock dataset was generated by chatGPT (#genderstereotypes)\npeople &lt;- list(\n  name = c(\"Fred\", \"John\", \"Paul\", \"Henry\"),\n  wife = c(\"Mary\", \"Linda\", \"Susan\", \"Kate\"),\n  no.children = c(3, 2, 4, 1)\n)\n#\npeople\n\nNow consider a slightly more complex example with new variables child.age, phone and address. The number of entries of child.age varies depending on the number of children.\nWith a list, this is not an issue:\n\npeople &lt;- list(\n  name = c(\"Fred\", \"John\", \"Paul\", \"Henry\"),\n  wife = c(\"Mary\", \"Linda\", \"Susan\", \"Kate\"),\n  no.children = c(3, 2, 4, 0),\n  child.age = list(\n    c(4, 7, 9),      # Fred's kids\n    c(5, 6),         # John's kids\n    c(2, 4, 6, 8),   # Paul's kids\n    c(NA)             # Not Available\n  ),\n  phone = list(\n    mobile = c(\"555-1111\", \"555-2222\", \"555-3333\", \"555-4444\"),\n    landline = c(\"555-1010\", \"555-2020\", \"555-3030\", \"555-4040\")\n  ),\n  address = list(\n    street = c(\"123 Main St\", \"456 Elm St\", \"789 Oak St\", \"101 Maple St\"),\n    city = c(\"Springfield\", \"Rivertown\", \"Lakeside\", \"Hillside\"),\n    state = c(\"IL\", \"TX\", \"CA\", \"NY\"),\n    zip = c(\"62704\", \"73301\", \"90210\", \"10001\")\n  )\n)\n#\npeople$child.age\n#\npeople$phone\n\nRemark: Note the use of the object NA (not available).\n\nused whenever a single value is missing\nunderstand algebra: try typing NA+3, 2/NA, 5*NA"
  },
  {
    "objectID": "Training_Session_1/Notes_session1.html#take-home-messages",
    "href": "Training_Session_1/Notes_session1.html#take-home-messages",
    "title": "Lecture notes",
    "section": "6.1 Take-home messages",
    "text": "6.1 Take-home messages\n\nR users write scripts\nCommon packages to load external data include readr and readxl\n\nhave to be installed (one off) with install.packages(\"\") before use,\nloaded with library(\"\"), within each R session\n\nCommon package functions to load external data include readr::read_csv and readxl::read_excel\nInfo on R objects in current session:\n\nin Environment pane\nls(), data %&gt;% ncol, data %&gt;% dim(), data %&gt;% str()\n\nAI\n\nBefore you know it, LLMs such as co-pilot, chatGPT and Gemini will become your best friend to help you scripting in R.\nFeel free to ask LLMs general questions on any R related topic, a good place to start is chatGPT R and Rstudio tutor\nIn the first weeks of this training , please refrain asking an LLM to write R scripts for you, or you will never learn anything."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Training_Session_1/dataReporter_PRRS.html",
    "href": "Training_Session_1/dataReporter_PRRS.html",
    "title": "PRRS",
    "section": "",
    "text": "The dataset examined has the following dimensions:\n\n\n\n\n\n\n\nFeature\nResult\n\n\n\n\nNumber of observations\n1353\n\n\nNumber of variables\n8\n\n\n\n\n\nThe following variable checks were performed, depending on the data type of each variable:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ncharacter\nfactor\nlabelled\nhaven labelled\nnumeric\ninteger\nlogical\nDate\n\n\n\n\nIdentify miscoded missing values\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\n\\(\\times\\)\n\n\nIdentify prefixed and suffixed whitespace\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\n\n\n\n\n\nIdentify levels with &lt; 6 obs.\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\n\n\n\n\n\nIdentify case issues\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\n\n\n\n\n\nIdentify misclassified numeric or integer variables\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\n\n\n\n\n\nIdentify outliers\n\n\n\n\n\\(\\times\\)\n\\(\\times\\)\n\n\\(\\times\\)\n\n\n\nPlease note that all numerical values in the following have been rounded to 2 decimals."
  },
  {
    "objectID": "Training_Session_1/dataReporter_PRRS.html#result",
    "href": "Training_Session_1/dataReporter_PRRS.html#result",
    "title": "PRRS",
    "section": "Result",
    "text": "Result\n\n\n\n\n\n\n\nFeature\nResult\n\n\n\n\nVariable type\ncharacter\n\n\nNumber of missing obs.\n0 (0 %)\n\n\nNumber of unique values\n2\n\n\nMode\n“No”"
  },
  {
    "objectID": "Training_Session_1/dataReporter_PRRS.html#sex",
    "href": "Training_Session_1/dataReporter_PRRS.html#sex",
    "title": "PRRS",
    "section": "Sex",
    "text": "Sex\n\n\n\n\n\n\n\nFeature\nResult\n\n\n\n\nVariable type\ncharacter\n\n\nNumber of missing obs.\n0 (0 %)\n\n\nNumber of unique values\n2\n\n\nMode\n“H”"
  },
  {
    "objectID": "Training_Session_1/dataReporter_PRRS.html#age",
    "href": "Training_Session_1/dataReporter_PRRS.html#age",
    "title": "PRRS",
    "section": "Age",
    "text": "Age\n\n\n\n\n\n\n\nFeature\nResult\n\n\n\n\nVariable type\nnumeric\n\n\nNumber of missing obs.\n0 (0 %)\n\n\nNumber of unique values\n83\n\n\nMedian\n24\n\n\n1st and 3rd quartiles\n14; 46\n\n\nMin. and max.\n6; 180\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote that the following possible outlier values were detected: \"180\"."
  },
  {
    "objectID": "Training_Session_1/dataReporter_PRRS.html#otherspecies",
    "href": "Training_Session_1/dataReporter_PRRS.html#otherspecies",
    "title": "PRRS",
    "section": "OtherSpecies",
    "text": "OtherSpecies\n\nNote that this variable is treated as a factor variable below, as it only takes a few unique values.\n\n\n\n\n\n\n\n\nFeature\nResult\n\n\n\n\nVariable type\nnumeric\n\n\nNumber of missing obs.\n0 (0 %)\n\n\nNumber of unique values\n2\n\n\nMode\n“0”\n\n\nReference category\n0"
  },
  {
    "objectID": "Training_Session_1/dataReporter_PRRS.html#id",
    "href": "Training_Session_1/dataReporter_PRRS.html#id",
    "title": "PRRS",
    "section": "id",
    "text": "id\n\n\n\n\n\n\n\nFeature\nResult\n\n\n\n\nVariable type\nnumeric\n\n\nNumber of missing obs.\n0 (0 %)\n\n\nNumber of unique values\n40\n\n\nMedian\n13\n\n\n1st and 3rd quartiles\n6; 24\n\n\nMin. and max.\n1; 40"
  },
  {
    "objectID": "Training_Session_1/dataReporter_PRRS.html#name",
    "href": "Training_Session_1/dataReporter_PRRS.html#name",
    "title": "PRRS",
    "section": "name",
    "text": "name\n\n\n\n\n\n\n\nFeature\nResult\n\n\n\n\nVariable type\ncharacter\n\n\nNumber of missing obs.\n0 (0 %)\n\n\nNumber of unique values\n40\n\n\nMode\n“Iowa Select Farms Inc”"
  },
  {
    "objectID": "Training_Session_1/dataReporter_PRRS.html#farm_type",
    "href": "Training_Session_1/dataReporter_PRRS.html#farm_type",
    "title": "PRRS",
    "section": "farm_type",
    "text": "farm_type\n\n\n\n\n\n\n\nFeature\nResult\n\n\n\n\nVariable type\ncharacter\n\n\nNumber of missing obs.\n0 (0 %)\n\n\nNumber of unique values\n5\n\n\nMode\n“sow farm”"
  },
  {
    "objectID": "Training_Session_1/dataReporter_PRRS.html#county",
    "href": "Training_Session_1/dataReporter_PRRS.html#county",
    "title": "PRRS",
    "section": "County",
    "text": "County\n\n\n\n\n\n\n\nFeature\nResult\n\n\n\n\nVariable type\ncharacter\n\n\nNumber of missing obs.\n0 (0 %)\n\n\nNumber of unique values\n28\n\n\nMode\n“Wright”\n\n\n\n\n\n\n\n\n\n\n\n\nReport generation information:\n\nCreated by: Gilles Guillot (username: g.guillot).\nReport creation time: Tue Jul 22 2025 16:21:03\nReport was run from directory: C:/Users/g.guillot/OneDrive - World Organisation For Animal Health/Data Science - Documents/Data Science Training 2025/Training_Session_1\ndataReporter v1.0.5 [Pkg: 2025-04-13 from CRAN (R 4.5.1)]\nR version 4.5.1 (2025-06-13 ucrt).\nPlatform: x86_64-w64-mingw32/x64(Europe/Berlin).\nFunction call: makeDataReport(data = .)"
  },
  {
    "objectID": "Notes_session1.html",
    "href": "Notes_session1.html",
    "title": "Lecture notes",
    "section": "",
    "text": "Teams -&gt; Data Science -&gt;  Data Science Training 2025\nPM to @g.guillot via teams or email"
  },
  {
    "objectID": "Notes_session1.html#the-various-panes",
    "href": "Notes_session1.html#the-various-panes",
    "title": "Lecture notes",
    "section": "2.1 The various panes",
    "text": "2.1 The various panes\n-   `Source`\n\n-   `Console`\n\n-   `Environment` etc...\n\n-   `Files`, `plots` etc..."
  },
  {
    "objectID": "Notes_session1.html#clicking-vs-scripting",
    "href": "Notes_session1.html#clicking-vs-scripting",
    "title": "Lecture notes",
    "section": "2.2 Clicking vs Scripting",
    "text": "2.2 Clicking vs Scripting\n\nClicking is user-friendly but error prone, not scalable, not traceable, not reproducible\nScripting is reliable (less error prone), scalable, traceable, reproducible"
  },
  {
    "objectID": "Notes_session1.html#rstudio-as-a-pocket-calculator",
    "href": "Notes_session1.html#rstudio-as-a-pocket-calculator",
    "title": "Lecture notes",
    "section": "2.3 Rstudio as a pocket calculator",
    "text": "2.3 Rstudio as a pocket calculator\n\n    2+2\n\n[1] 4\n\n    x=3\n    x\n\n[1] 3\n\n    y=4\n    y\n\n[1] 4\n\n    x+y\n\n[1] 7\n\n    x=1:10\n    x\n\n [1]  1  2  3  4  5  6  7  8  9 10\n\n    y=10:1\n    y\n\n [1] 10  9  8  7  6  5  4  3  2  1\n\n    x+y\n\n [1] 11 11 11 11 11 11 11 11 11 11\n\n    # checking my R objects\n    ls()  # even more information found in the 'Environment' pane\n\n[1] \"x\" \"y\"\n\n\n\nSetting the working directory\n\nMethod 1 (GUI): Session -&gt; Set Working Directory\nMethod 2 (command line)\n\n\n\n# line below to be updated\nsetwd(\"C:/Users/g.guillot/OneDrive - World Organisation For Animal Health/Data Science - Documents/Data Science Training 2025/Training_Session_1\")\n\nNB: any character found after a # is treated as a comment (disregarded by R). It is strongly recommended to add brief informative comments to your code to help your next-door colleague or you future self ."
  },
  {
    "objectID": "Notes_session1.html#a-tiny-dataset-in-txt-format",
    "href": "Notes_session1.html#a-tiny-dataset-in-txt-format",
    "title": "Lecture notes",
    "section": "3.1 A tiny dataset in txt format",
    "text": "3.1 A tiny dataset in txt format\n\nTry to load the books.csv data using the GUI\nDo the same using R commands as below:\n\n\n# installing  a special library to read external data\n# install.packages('readr') # has to be done only once\n\n# loading the package\nlibrary(readr) # has to be done at start of each R session\nbook_data &lt;- read_csv(\"data/books.csv\")"
  },
  {
    "objectID": "Notes_session1.html#where-are-my-data",
    "href": "Notes_session1.html#where-are-my-data",
    "title": "Lecture notes",
    "section": "3.2 Where are my data?",
    "text": "3.2 Where are my data?\nYou can inspect the content of the dataset you just created by\n\nClicking on the object name in the `Environment` pane\nR commands:\n\n\nlibrary(magrittr) # load a library for modern R syntax writing\n\nbook_data # print the dataset in the console\n\n# A tibble: 5 × 3\n  Title                  Author         `Year of Publication`\n  &lt;chr&gt;                  &lt;chr&gt;                          &lt;dbl&gt;\n1 The Hobbit             J.R.R. Tolkien                  1937\n2 To Kill a Mockingbird  Harper Lee                      1960\n3 1984                   George Orwell                   1949\n4 Pride and Prejudice    Jane Austen                     1813\n5 The Catcher in the Rye J.D. Salinger                   1951\n\nbook_data %&gt;% str() # print info on  structure (more efficient in case of large dataset)\n\nspc_tbl_ [5 × 3] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Title              : chr [1:5] \"The Hobbit\" \"To Kill a Mockingbird\" \"1984\" \"Pride and Prejudice\" ...\n $ Author             : chr [1:5] \"J.R.R. Tolkien\" \"Harper Lee\" \"George Orwell\" \"Jane Austen\" ...\n $ Year of Publication: num [1:5] 1937 1960 1949 1813 1951\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Title = col_character(),\n  ..   Author = col_character(),\n  ..   `Year of Publication` = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt;"
  },
  {
    "objectID": "Notes_session1.html#miscellaneous-remarks",
    "href": "Notes_session1.html#miscellaneous-remarks",
    "title": "Lecture notes",
    "section": "3.3 Miscellaneous remarks",
    "text": "3.3 Miscellaneous remarks\n\n3.3.1 Piping\n\nIn older R code book_data %&gt;% str() used to be written str(book_data). More generally data %&gt;% function() used to be written as function(data). The latter is still widely found.\nThe three characters %&gt;% (pronounced ‘pipe’) can be obtained with the keyboard shortcut Ctrl + Shift + M\nIn this training, we will strive to use the modern syntax data %&gt;% function() or more generally data %&gt;% function(opt_arg = my_option)\n\n\n\n3.3.2 Code formatting\n\nNaming conventions:\n\nObject names should start with a letter (numbers and most special characters are forbidden)\nCompound names are welcome\n\nsnake style (preferred): my_data\ncamel style: MyData\n\nExecuting lines, blocks,full scripts\n\nNo rule on code formatting (space, indentation, line end)"
  },
  {
    "objectID": "Notes_session1.html#a-larger-dataset-in-excel-format",
    "href": "Notes_session1.html#a-larger-dataset-in-excel-format",
    "title": "Lecture notes",
    "section": "3.4 A larger dataset, in excel format",
    "text": "3.4 A larger dataset, in excel format\nTry now to load the PRRS.xlsx dataset.\n\nlibrary(tidyverse) # loading several useful packages\nlibrary(readxl) # to load excel data into R\n\nPRRS = read_excel(\"./data/PRRS.xlsx\")\n\n\nProprietary formats like .xlsx not preferred in Open Source world. Excel de facto standard in corporate world and well supported by Rstudio. Many other formats supported, e.g. .csv, .tsv, .rds, .rda, .json etc.\nWhere are my data ?!?\n\nIn Excel: a lot of screen space for data values, not much for scripting\nIn Rstudio:\n\nRecognition that editing a data file is error prone, not scalable, not traceable, not reproducible\nFocus on scripting, not on data values\nType `ls()` in the console to get a list of your data\n\n\nThe environment pane"
  },
  {
    "objectID": "Notes_session1.html#exploring-the-structure-of-the-prrs-dataset",
    "href": "Notes_session1.html#exploring-the-structure-of-the-prrs-dataset",
    "title": "Lecture notes",
    "section": "3.5 Exploring the structure of the PRRS dataset",
    "text": "3.5 Exploring the structure of the PRRS dataset\n\nMethod 1 GUI: inspect information in the Environment pane (limited)\nMethod 2: asking questions about the dataset via a script\n\n\n# How many rows and columns?\nPRRS %&gt;% dim()\n\n[1] 1353    8\n\n# number of columns\nPRRS %&gt;% ncol()\n\n[1] 8\n\n# number of rows (note the naming consistency!)\nPRRS %&gt;% nrow()\n\n[1] 1353\n\n# variable names\nPRRS %&gt;% colnames()\n\n[1] \"Result\"       \"Sex\"          \"Age\"          \"OtherSpecies\" \"id\"          \n[6] \"name\"         \"farm_type\"    \"County\"      \n\n# name and class (character, numeric) of variables?\nPRRS %&gt;% str()\n\ntibble [1,353 × 8] (S3: tbl_df/tbl/data.frame)\n $ Result      : chr [1:1353] \"No\" \"No\" \"No\" \"Yes\" ...\n $ Sex         : chr [1:1353] \"H\" \"H\" \"H\" \"H\" ...\n $ Age         : num [1:1353] 18 60 60 36 50 16 15 22 30 14 ...\n $ OtherSpecies: num [1:1353] 0 0 0 0 0 0 0 0 0 0 ...\n $ id          : num [1:1353] 23 23 23 23 23 23 23 23 23 23 ...\n $ name        : chr [1:1353] \"Armstrong Research Farm\" \"Armstrong Research Farm\" \"Armstrong Research Farm\" \"Armstrong Research Farm\" ...\n $ farm_type   : chr [1:1353] \"sow farm\" \"sow farm\" \"sow farm\" \"sow farm\" ...\n $ County      : chr [1:1353] \"Pottawattamie\" \"Pottawattamie\" \"Pottawattamie\" \"Pottawattamie\" ...\n\n# quick statistical summary of all variables\nPRRS %&gt;% summary()\n\n    Result              Sex                 Age          OtherSpecies  \n Length:1353        Length:1353        Min.   :  6.00   Min.   :0.000  \n Class :character   Class :character   1st Qu.: 14.00   1st Qu.:0.000  \n Mode  :character   Mode  :character   Median : 24.00   Median :0.000  \n                                       Mean   : 31.27   Mean   :0.187  \n                                       3rd Qu.: 46.00   3rd Qu.:0.000  \n                                       Max.   :180.00   Max.   :1.000  \n       id            name            farm_type            County         \n Min.   : 1.00   Length:1353        Length:1353        Length:1353       \n 1st Qu.: 6.00   Class :character   Class :character   Class :character  \n Median :13.00   Mode  :character   Mode  :character   Mode  :character  \n Mean   :15.31                                                           \n 3rd Qu.:24.00                                                           \n Max.   :40.00"
  },
  {
    "objectID": "Notes_session1.html#rectangular-tables",
    "href": "Notes_session1.html#rectangular-tables",
    "title": "Lecture notes",
    "section": "4.1 Rectangular tables",
    "text": "4.1 Rectangular tables\n\nIn Excel, data are organised in sheets and there is also almost no constraint on what a sheet can contain and how material is organised in a sheet\nIn R, there are constraints\nA rectangular table in R is most commonly stored as a data.frame (old style) or a tibble (preferred)\n\ncan mix numeric and character variables (columns)"
  },
  {
    "objectID": "Notes_session1.html#handling-loosely-structured-data",
    "href": "Notes_session1.html#handling-loosely-structured-data",
    "title": "Lecture notes",
    "section": "4.2 Handling loosely structured data",
    "text": "4.2 Handling loosely structured data\nWhen a dataset can not fit in a rectangular table, a good option is often to store it as a list (or list of lists).\nLet’s consider the simple dataset below. This could be stored as rectangular table with 4 rows and 3 columns.\n\n# NB: this mock dataset was generated by chatGPT (#genderstereotypes)\npeople &lt;- list(\n  name = c(\"Fred\", \"John\", \"Paul\", \"Henry\"),\n  wife = c(\"Mary\", \"Linda\", \"Susan\", \"Kate\"),\n  no.children = c(3, 2, 4, 1)\n)\n#\npeople\n\n$name\n[1] \"Fred\"  \"John\"  \"Paul\"  \"Henry\"\n\n$wife\n[1] \"Mary\"  \"Linda\" \"Susan\" \"Kate\" \n\n$no.children\n[1] 3 2 4 1\n\n\nNow consider a slightly more complex example with new variables child.age, phone and address. The number of entries of child.age varies depending on the number of children.\nWith a list, this is not an issue:\n\npeople &lt;- list(\n  name = c(\"Fred\", \"John\", \"Paul\", \"Henry\"),\n  wife = c(\"Mary\", \"Linda\", \"Susan\", \"Kate\"),\n  no.children = c(3, 2, 4, 0),\n  child.age = list(\n    c(4, 7, 9),      # Fred's kids\n    c(5, 6),         # John's kids\n    c(2, 4, 6, 8),   # Paul's kids\n    c(NA)             # Not Available\n  ),\n  phone = list(\n    mobile = c(\"555-1111\", \"555-2222\", \"555-3333\", \"555-4444\"),\n    landline = c(\"555-1010\", \"555-2020\", \"555-3030\", \"555-4040\")\n  ),\n  address = list(\n    street = c(\"123 Main St\", \"456 Elm St\", \"789 Oak St\", \"101 Maple St\"),\n    city = c(\"Springfield\", \"Rivertown\", \"Lakeside\", \"Hillside\"),\n    state = c(\"IL\", \"TX\", \"CA\", \"NY\"),\n    zip = c(\"62704\", \"73301\", \"90210\", \"10001\")\n  )\n)\n#\npeople$child.age\n\n[[1]]\n[1] 4 7 9\n\n[[2]]\n[1] 5 6\n\n[[3]]\n[1] 2 4 6 8\n\n[[4]]\n[1] NA\n\n#\npeople$phone\n\n$mobile\n[1] \"555-1111\" \"555-2222\" \"555-3333\" \"555-4444\"\n\n$landline\n[1] \"555-1010\" \"555-2020\" \"555-3030\" \"555-4040\"\n\n\nRemark: Note the use of the object NA (not available).\n\nused whenever a single value is missing\nunderstand algebra: try typing NA+3, 2/NA, 5*NA"
  },
  {
    "objectID": "Notes_session1.html#take-home-messages",
    "href": "Notes_session1.html#take-home-messages",
    "title": "Lecture notes",
    "section": "6.1 Take-home messages",
    "text": "6.1 Take-home messages\n\nR users write scripts\nCommon packages to load external data include readr and readxl\n\nhave to be installed (one off) with install.packages(\"\") before use,\nloaded with library(\"\"), within each R session\n\nCommon package functions to load external data include readr::read_csv and readxl::read_excel\nInfo on R objects in current session:\n\nin Environment pane\nls(), data %&gt;% ncol, data %&gt;% dim(), data %&gt;% str()\n\nAI\n\nBefore you know it, LLMs such as co-pilot, chatGPT and Gemini will become your best friend to help you scripting in R.\nFeel free to ask LLMs general questions on any R related topic, a good place to start is chatGPT R and Rstudio tutor\nIn the first weeks of this training , please refrain asking an LLM to write R scripts for you, or you will never learn anything."
  },
  {
    "objectID": "Notes_session2.html",
    "href": "Notes_session2.html",
    "title": "Lecture notes",
    "section": "",
    "text": "After a dataset is loaded, we commonly have to go through steps such as checking, cleaning, pruning, reshaping, reformatting etc… The R package dplyr contains functions and a common set of rules (syntax/grammar) to do that. This package needs to be installed as:\n\ninstall.packages(\"dplyr\")\ninstall.packages(\"tidyr\")\n\nand loaded\n\nlibrary(dplyr)\nlibrary(tidyr)\n\nIn this session, we are going to work with toy dataset included in R, the mtcars dataset"
  },
  {
    "objectID": "Notes_session2.html#filtering",
    "href": "Notes_session2.html#filtering",
    "title": "Lecture notes",
    "section": "2.1 Filtering",
    "text": "2.1 Filtering\nWe can retain rows of a dataset matching a condition with filter()\n\n#  creating a subset of the data with only cars having 4  gears\ndat0 = mtcars_data %&gt;% filter(gear == 4) \n\ndat0\n\n# A tibble: 12 × 12\n   make          mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb\n   &lt;chr&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Mazda RX4    21       6 160     110  3.9   2.62  16.5     0     1     4     4\n 2 Mazda RX4 …  21       6 160     110  3.9   2.88  17.0     0     1     4     4\n 3 Datsun 710   22.8     4 108      93  3.85  2.32  18.6     1     1     4     1\n 4 Merc 240D    24.4     4 147.     62  3.69  3.19  20       1     0     4     2\n 5 Merc 230     22.8     4 141.     95  3.92  3.15  22.9     1     0     4     2\n 6 Merc 280     19.2     6 168.    123  3.92  3.44  18.3     1     0     4     4\n 7 Merc 280C    17.8     6 168.    123  3.92  3.44  18.9     1     0     4     4\n 8 Fiat 128     32.4     4  78.7    66  4.08  2.2   19.5     1     1     4     1\n 9 Honda Civic  30.4     4  75.7    52  4.93  1.62  18.5     1     1     4     2\n10 Toyota Cor…  33.9     4  71.1    65  4.22  1.84  19.9     1     1     4     1\n11 Fiat X1-9    27.3     4  79      66  4.08  1.94  18.9     1     1     4     1\n12 Volvo 142E   21.4     4 121     109  4.11  2.78  18.6     1     1     4     2"
  },
  {
    "objectID": "Notes_session2.html#re-arranging-rows-with-arrange",
    "href": "Notes_session2.html#re-arranging-rows-with-arrange",
    "title": "Lecture notes",
    "section": "2.2 Re-arranging rows with arrange()",
    "text": "2.2 Re-arranging rows with arrange()\nWe can arrange rows of a data set with arrange(), for example by car make or mpg of gears:\n\n# creating a dataset with same variables but rows sorted by mpg\ndat1 = mtcars_data %&gt;% arrange(mpg)\ndat1\n\n# A tibble: 32 × 12\n   make          mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb\n   &lt;chr&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Cadillac F…  10.4     8  472    205  2.93  5.25  18.0     0     0     3     4\n 2 Lincoln Co…  10.4     8  460    215  3     5.42  17.8     0     0     3     4\n 3 Camaro Z28   13.3     8  350    245  3.73  3.84  15.4     0     0     3     4\n 4 Duster 360   14.3     8  360    245  3.21  3.57  15.8     0     0     3     4\n 5 Chrysler I…  14.7     8  440    230  3.23  5.34  17.4     0     0     3     4\n 6 Maserati B…  15       8  301    335  3.54  3.57  14.6     0     1     5     8\n 7 Merc 450SLC  15.2     8  276.   180  3.07  3.78  18       0     0     3     3\n 8 AMC Javelin  15.2     8  304    150  3.15  3.44  17.3     0     0     3     2\n 9 Dodge Chal…  15.5     8  318    150  2.76  3.52  16.9     0     0     3     2\n10 Ford Pante…  15.8     8  351    264  4.22  3.17  14.5     0     1     5     4\n# ℹ 22 more rows"
  },
  {
    "objectID": "Notes_session2.html#selecting-columns",
    "href": "Notes_session2.html#selecting-columns",
    "title": "Lecture notes",
    "section": "2.3 Selecting columns",
    "text": "2.3 Selecting columns\nWe can select a subset of columns with select()\n\n# creaintg a subset of the data containing only variables mpg and cyl\ndat2 = mtcars_data %&gt;% select(mpg,cyl)\ndat2\n\n# A tibble: 32 × 2\n     mpg   cyl\n   &lt;dbl&gt; &lt;dbl&gt;\n 1  21       6\n 2  21       6\n 3  22.8     4\n 4  21.4     6\n 5  18.7     8\n 6  18.1     6\n 7  14.3     8\n 8  24.4     4\n 9  22.8     4\n10  19.2     6\n# ℹ 22 more rows"
  },
  {
    "objectID": "Notes_session2.html#creating-a-new-variable-with-mutate",
    "href": "Notes_session2.html#creating-a-new-variable-with-mutate",
    "title": "Lecture notes",
    "section": "2.4 Creating a new variable with mutate()",
    "text": "2.4 Creating a new variable with mutate()\nWe can create a new variable, for example the power to weight ratio, defined as hp/wt with mutate() as:\n\n# creating a new dataset with new variable  ratio, defined as hp/wt\ndat3 = mtcars_data %&gt;% mutate(ratio = hp/wt)\ndat3\n\n# A tibble: 32 × 13\n   make    mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb ratio\n   &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Mazd…  21       6  160    110  3.9   2.62  16.5     0     1     4     4  42.0\n 2 Mazd…  21       6  160    110  3.9   2.88  17.0     0     1     4     4  38.3\n 3 Dats…  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1  40.1\n 4 Horn…  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1  34.2\n 5 Horn…  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2  50.9\n 6 Vali…  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1  30.3\n 7 Dust…  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4  68.6\n 8 Merc…  24.4     4  147.    62  3.69  3.19  20       1     0     4     2  19.4\n 9 Merc…  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2  30.2\n10 Merc…  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4  35.8\n# ℹ 22 more rows"
  },
  {
    "objectID": "Notes_session2.html#combining-several-operations-with-multiple-pipes",
    "href": "Notes_session2.html#combining-several-operations-with-multiple-pipes",
    "title": "Lecture notes",
    "section": "2.5 Combining several operations with multiple pipes",
    "text": "2.5 Combining several operations with multiple pipes\nMultiple data wrangling operations can be combined into a single, longer R expression as\n\ndat5 =  mtcars_data %&gt;% \n  filter(gear == 4) %&gt;%  # only 4-gear cars\n  arrange(mpg) %&gt;%  # arranging by mpg\n  mutate(ratio = hp/wt) # new variable\ndat5\n\n# A tibble: 12 × 13\n   make    mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb ratio\n   &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Merc…  17.8     6 168.    123  3.92  3.44  18.9     1     0     4     4  35.8\n 2 Merc…  19.2     6 168.    123  3.92  3.44  18.3     1     0     4     4  35.8\n 3 Mazd…  21       6 160     110  3.9   2.62  16.5     0     1     4     4  42.0\n 4 Mazd…  21       6 160     110  3.9   2.88  17.0     0     1     4     4  38.3\n 5 Volv…  21.4     4 121     109  4.11  2.78  18.6     1     1     4     2  39.2\n 6 Dats…  22.8     4 108      93  3.85  2.32  18.6     1     1     4     1  40.1\n 7 Merc…  22.8     4 141.     95  3.92  3.15  22.9     1     0     4     2  30.2\n 8 Merc…  24.4     4 147.     62  3.69  3.19  20       1     0     4     2  19.4\n 9 Fiat…  27.3     4  79      66  4.08  1.94  18.9     1     1     4     1  34.1\n10 Hond…  30.4     4  75.7    52  4.93  1.62  18.5     1     1     4     2  32.2\n11 Fiat…  32.4     4  78.7    66  4.08  2.2   19.5     1     1     4     1  30  \n12 Toyo…  33.9     4  71.1    65  4.22  1.84  19.9     1     1     4     1  35.4"
  },
  {
    "objectID": "Notes_session2.html#basic-ggplot-syntax",
    "href": "Notes_session2.html#basic-ggplot-syntax",
    "title": "Lecture notes",
    "section": "3.1 Basic ggplot syntax",
    "text": "3.1 Basic ggplot syntax\nA scatter plot of mpg against hp:\n\nlibrary(ggplot2)\n\nmtcars_data %&gt;%  # what data?\n  ggplot( aes(x = hp, y = mpg) ) + # what variables on the axes?\n  geom_point() # what type of representation?"
  },
  {
    "objectID": "Notes_session2.html#larger-dots-with-colours",
    "href": "Notes_session2.html#larger-dots-with-colours",
    "title": "Lecture notes",
    "section": "3.2 Larger dots, with colours",
    "text": "3.2 Larger dots, with colours\nA slightly nicer plot with wt as colour shades (colour = wt) and larger dots (cex=2)\n\nmtcars_data %&gt;% \n  ggplot( aes(x = hp, y = mpg, colour = wt, size=2) ) +\n  geom_point() + \n  scale_size(guide = \"none\")"
  },
  {
    "objectID": "Notes_session2.html#adding-a-title-and-axes-labels",
    "href": "Notes_session2.html#adding-a-title-and-axes-labels",
    "title": "Lecture notes",
    "section": "3.3 Adding a title and axes labels",
    "text": "3.3 Adding a title and axes labels\n\nmtcars_data %&gt;% \n  ggplot( aes(x = hp, y = mpg, colour = wt, size=2) ) +\n  geom_point() +\n  scale_size(guide = \"none\") + \n  labs(title = \"MPG vs Horsepower\",\n       x = \"Horsepower (hp)\",\n       y = \"Miles per Gallon (mpg)\")"
  },
  {
    "objectID": "index.html#common-data-structures-basic-of-r-and-dplyr-syntax-first-look-at-plotting-figures",
    "href": "index.html#common-data-structures-basic-of-r-and-dplyr-syntax-first-look-at-plotting-figures",
    "title": "Syllabus",
    "section": "Common data structures, basic of R and dplyr syntax, first look at plotting figures",
    "text": "Common data structures, basic of R and dplyr syntax, first look at plotting figures"
  },
  {
    "objectID": "index.html#data-manipulation-andpltting-cont",
    "href": "index.html#data-manipulation-andpltting-cont",
    "title": "Syllabus",
    "section": "Data manipulation andpltting (cont’)",
    "text": "Data manipulation andpltting (cont’)"
  },
  {
    "objectID": "index.html#data-manipulation-and-plotting-cont",
    "href": "index.html#data-manipulation-and-plotting-cont",
    "title": "Syllabus",
    "section": "Data manipulation and plotting (cont’)",
    "text": "Data manipulation and plotting (cont’)"
  }
]